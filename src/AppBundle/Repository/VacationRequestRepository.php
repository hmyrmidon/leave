<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Status;
use AppBundle\Entity\User;
use AppBundle\Entity\VacationRequest;

/**
 * VacationRequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VacationRequestRepository extends \Doctrine\ORM\EntityRepository
{
    public function listNotValidateBy(User $validator)
    {
        $query = "SELECT v, e, t, u FROM AppBundle:VacationRequest v 
                          JOIN v.employee e 
                          JOIN e.team t
                          JOIN t.validator u
                          WHERE u.validator = :uid AND v.status = :status AND v.id NOT IN (
                            SELECT vc.id FROM AppBundle:VacationValidation vs JOIN vs.vacation vc WHERE vs.manager = :uid
                          ) ";

        $list = $this->_em->createQuery($query)
                  ->setParameters(['uid' => $validator->getId(), 'status' => VacationRequest::PENDING_STATUS])
                  ->getResult();
        
        return $list;
    }

    public function history($criteria)
    {
        return $this->_em->getRepository('AppBundle:VacationRequest')->findBy($criteria);
    }

    public function getVacationBy($params, $joinDql = '')
    {
        $dql = 'SELECT v FROM AppBundle:VacationRequest v '.$joinDql;

        $parameters = array();
        $conditions = array();
        foreach ($params as $key => $value) {
            $param = str_replace(".", "", $key);
            if ($value != "" && !is_null($value) && !is_array($value)) {
                $conditions[] = "$key = :$param";
                $parameters[$param] = $value;
            } elseif (is_array($value) && count($value) == 2 && $value[0]) {
                $val = $value[0];
                $ope = isset($value[1]) ? $value[1] : '=';
                $conditions[] = "$key $ope :$param";
                $parameters[$param] = ($ope == 'LIKE') ? "%$val%" : $val;
            }elseif (is_array($value) && count($value) == 3 && $value[0]){
                $val = $value[0];
                $ope = isset($value[1]) ? $value[1] : '=';
                $callback = isset($value[2]) ? $value[2] : '';
                $conditions[] = "$callback($key) $ope :$param";
                $parameters[$param] = ($ope == 'YEAR') ? "$val" : $val;
            }
        }

        if (count($conditions) > 0) {
            $dql .= ' WHERE '.implode(' AND ', $conditions);
        }
        //dump([$this->_em->createQuery($dql)->setParameters($parameters)->getSQL(), $parameters]);die;
        return $this->_em->createQuery($dql)->setParameters($parameters)->getResult();
    }

}
